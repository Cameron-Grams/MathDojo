read me:  https://woutr.me/2017/01/01/authenticating-with-json-web-tokens.html

9 Oct
differences after work:
- changed the name of the properties being searched for in MongoDB
- bcrypt requiring Object specification?  Forces the inclusion of properties by commision rather than ommission...; jwt.sign( ... ) line 110 sessionRouter.js 

- dashboard 'checkUser()' function;
    - to dashboard authorization endpoint on router
    - header contains an Authorization property
    - success/ error actions
    - localStorage to hold the JWT; set in the login-logic.js, calls dashboard.html 
        - dashboard-logic.js checks to make sure the JWT is present for the dashboard page before permitting data to be displayed.
    - specification of the operation in the call to dashboard...
    - including the http status on the response object from the server ( Promise function); prevents an incorrect response being sent through by default

--more explanation of the basicStrategy.js  ?? 
--CORS? 

------------------------------

12 Oct
To Do:
- format login entries

- logout feature

- dashboard display
  - past performance; graph? 

- dashboard select/ end training



-------------------
Stackoverflow question;

There is a problem with the command sent to Mongo DB to capture the changes made to an object as part of the flow of the program.  The data in Mongo DB is held in an array of objects, called 'problems', that is held in an object called 'session':
{
	"_id" : ObjectId("59df5ee7adb378237377dbb4"),
	"updatedAt" : ISODate("2017-10-12T12:24:07.269Z"),
	"createdAt" : ISODate("2017-10-12T12:24:07.269Z"),
	"userId" : "59df5edbadb378237377dbb3",
	"problems" : [
		{
			"correctResponse" : 23,
			"problem" : "20 + 3",
			"secondTerm" : 3,
			"firstTerm" : 20
                } ]
}
















